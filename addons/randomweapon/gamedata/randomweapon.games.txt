"Games"
{
	"csgo"
	{
		"Signatures"
		{
			// String: "Noise removal", there should be 3 customermachine checks
			"HammerNoCustomerMachine"
			{
				"library"		"hammer"
				"windows"		"\xFF\x15\x2A\x2A\x2A\x2A\x84\xC0\x0F\x85\x2A\x2A\x2A\x2A\xB9"
				"linux"			""
			}
			// String: "CCSPlayerPawnBase::SwitchTeam", just keep in mind this is actually CCSPlayerController::SwitchTeam
			"CCSPlayerController_SwitchTeam"
			{
				"library"		"server"
				"windows"		"\x40\x56\x57\x48\x81\xEC\x2A\x2A\x2A\x2A\x48\x8B\xF9\x8B\xF2\x8B\xCA"
				"linux"			"\x55\x48\x89\xE5\x41\x55\x49\x89\xFD\x89\xF7"
			}
			// Called right after "Removed %s(%s)\n"
			"UTIL_Remove"
			{
				"library"		"server"
				"windows"		"\x48\x85\xC9\x74\x2A\x48\x8B\xD1\x48\x8B\x0D\x2A\x2A\x2A\x2A"
				"linux"			"\x48\x89\xFE\x48\x85\xFF\x74\x2A\x48\x8D\x05\x2A\x2A\x2A\x2A\x48"
			}
			// "SetPosition" is passed to this
			"CEntitySystem_AddEntityIOEvent"
			{
				"library"		"server"
				"windows"		"\x48\x89\x5C\x24\x08\x48\x89\x74\x24\x18\x57\x48\x83\xEC\x40\x49\x8B\xF1"
				"linux"			"\x55\x41\xBA\xFF\xFF\xFF\xFF"
			}
			// "Explode" is passed to this
			"CEntityInstance_AcceptInput"
			{
				"library"		"server"
				"windows"		"\x48\x89\x5C\x24\x10\x48\x89\x74\x24\x18\x57\x48\x83\xEC\x40\x49\x8B\xF0"
				"linux"			"\x55\x48\x89\xE5\x41\x57\x49\x89\xFF\x41\x56\x48\x8D\x7D\xC0"
			}
			"CEntityIdentity_AcceptInput"
			{
				"library"		"server"
				"windows"		"\x48\x89\x54\x24\x2A\x48\x89\x4C\x24\x2A\x55\x53\x56\x57\x41\x55\x41\x56\x41\x57\x48\x8D\x6C\x24"
				"linux"			"\x55\x48\x89\xE5\x41\x57\x41\x56\x4C\x8D\xBD\xD0\xFE\xFF\xFF\x49\x89\xD6\x41\x55\x49\x89\xF5\x41\x54\x49\x89\xCC"
			}
			// "Game System %s is defined twice!\n"
			// Note that this signature points to the instruction with sm_pFirst which is the first qword referenced in the function.
			"IGameSystem_InitAllSystems_pFirst"
			{
				"library"		"server"
				"windows"		"\x48\x8B\x3D\x2A\x2A\x2A\x2A\x48\x85\xFF\x0F\x84\x2A\x2A\x2A\x2A\xBE"
				"linux"			"\x4C\x8B\x35\x2A\x2A\x2A\x2A\x4D\x85\xF6\x75\x2A\xE9"
			}
			"CGameRules_TerminateRound"
			{
				"library"		"server"
				"windows"		"\x48\x8B\xC4\x4C\x89\x48\x2A\x48\x89\x48\x2A\x55\x41\x55"
				"linux"			"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x55\x41\x54\x49\x89\xFC\x53\x48\x81\xEC\x88\x00\x00\x00\x48\x8D\x05\x2A\x2A\x2A\x2A"
			}
			"CreateEntityByName"
			{
				"library"		"server"
				"windows"		"\x48\x83\xEC\x48\xC6\x44\x24\x30\x00"
				"linux"			"\x48\x8D\x05\x2A\x2A\x2A\x2A\x55\x48\x89\xFA"
			}
			"DispatchSpawn"
			{
				"library"		"server"
				"windows"		"\x48\x89\x5C\x24\x10\x57\x48\x83\xEC\x30\x48\x8B\xDA\x48\x8B\xF9\x48\x85\xC9"
				"linux"			"\x48\x85\xFF\x74\x2A\x55\x48\x89\xE5\x41\x56"
			}
			// search for "land_%s", this is called after that string is referenced (the one with 4 parameters).
			// (function that calls it also contains "T_Default.SuitLand").
			"CBaseEntity_EmitSoundFilter"
			{
				"library"	"server"
				"windows"	"\x48\x89\x5C\x24\x08\x48\x89\x6C\x24\x10\x48\x89\x74\x24\x18\x48\x89\x7C\x24\x20\x41\x56\x48\x83\xEC\x30\x48\x8B\xEA"
				"linux"		"\x55\x48\x89\xE5\x41\x56\x49\x89\xD6\x41\x55\x41\x89\xF5\x41\x54\x48\x8D\x35\x2A\x2A\x2A\x2A"
			}
			// "%sRecv usercmd %d.  Margin:%5.1fms net +%2d queue =%5.1f total\n"
			"ProcessUsercmds"
			{
				"library"	"server"
				"windows"	"\x48\x8B\xC4\x44\x88\x48\x20\x44\x89\x40\x18\x48\x89\x50\x10\x53"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x41\x56\x41\x89\xD6\x41\x55\x41\x54\x49\x89\xFC\x53\x48\x83\xEC\x38"
			}
			"GiveNamedItem"
			{
				"library"	"server"
				"windows" 	"\x48\x89\x5C\x24\x2A\x48\x89\x74\x24\x2A\x55\x57\x41\x2A\x41\x2A\x41\x2A\x48\x2A\x2A\x2A\x2A\x48\x2A\x2A\x2A\x2A\x2A\x2A\x4D\x2A\x2A\x48"
				"linux"		"\x55\x48\x89\xE5\x41\x57\x41\x56\x49\x89\xD6\x41\x55\x49\x89\xCD\x41\x54\x49\x89\xF4\x53\x48\x89\xFB\x48\x8D\x3D"
			}
			"GiveNamedItem_SwitchPatch"
			{
				"library"	"server"
				"windows"	"\x74\x1B\xF3\x41\x0F\x10\x54\x24\x08\xF2\x41"
				"linux"		"\x74\x2A\xF3\x41\x0F\x10\x55\x08\xF3\x41\x0F\x10\x4D"
			}
		}
		"Offsets"
		{
			"GameEntitySystem"
			{
				"windows"		"88"
				"linux"			"80"
			}
			// For these two, look for the names, you'll find vscript bindings
			// Scroll down to where the var + 64 gets set to a function, that calls the offset we want
			"IsPlayerPawn"
			{
				"windows"		"161"
				"linux"			"160"
			}
			"IsPlayerController"
			{
				"windows"		"162"
				"linux"			"161"
			}
			// String: "%s<%i><%s><%s>" ChangeTeam() CTMDBG..."
			"CCSPlayerController_ChangeTeam"
			{
				"windows"		"100"
				"linux"			"99"
			}
			// Look for the kill command, go through its callback and you should a find call like this, with v9 being a pawn pointer:
			// return (*(*v9 + 2976LL))(v9, v27, 0LL);
			// 2976 (372 * 8) is the offset
			"CBasePlayerPawn_CommitSuicide"
			{
				"windows"		"380"
				"linux"			"380"
			}
			// In the function with "[%03d] Found: %s, firing\n", you'll find a call into a pointer offset just a bit higher, that's the offset * 8
			"CCSPlayerController_Respawn"
			{
				"windows"		"257"
				"linux"			"259"
			}
			// engine
			// "tried to sprint to a non-client", there will be a check above like this: if ( a2 >= *(v5 + 632) ), note that this is a CUtlVector
			"CNetworkGameServer_ClientList"
			{
				"windows"		"78"
				"linux"			"80"
			}
			// Right above "mapgroup workshop;" string there is a virtual call to this on g_pGameTypes using "workshop" string
			"CCSPlayer_WeaponServices::DropWeapon"
			{
				"windows"		"22"
				"linux"			"23"
			}
			"CCSGameRules_GoToIntermission"
			{
				"windows"		"128"
				"linux"			"129"
			}
		}
		"Patches"
		{
			// Server
			"GiveNamedItem_SwitchPatch"
			{
				"windows"	"\xEB" // switch conditional jump to unconditional (8-bit relative)
				"linux"		"\xEB"
			}
			// Hammer
			"HammerNoCustomerMachine"
			{
				"windows"		"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
				"linux"			""
			}
		}
	}
}
